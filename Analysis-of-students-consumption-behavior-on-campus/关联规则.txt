# 数据读取
import numpy as np
import pandas as pd
import os

pd.set_option('display.max_columns', None)
os.chdir('/Users/wuzhengxiang/Documents/DataSets/students')
data1 = pd.read_csv("data1.csv", encoding="gbk")
data2 = pd.read_csv("data2.csv", encoding="gbk")
data3 = pd.read_csv("data3.csv", encoding="gbk")

data1.columns = ['序号', '校园卡号', '性别', '专业名称', '门禁卡号']
data2.columns = ['流水号', '校园卡号', '校园卡编号', '消费时间', '消费金额', '存储金额', '余额', '消费次数', '消费类型', '消费项目编码', '消费项目序列号', '消费操作编码', '操作编码', '消费地点']
data3.columns = ['序号', '门禁卡号', '进出时间', '进出地点', '是否通过', '描述']

print(data1.head(3))
序号    校园卡号 性别    专业名称      门禁卡号
0   1  180001  男  18国际金融  19762330
1   2  180002  男  18国际金融  20521594
2   3  180003  男  18国际金融  20513946

print(data2.head(3))
流水号      校园卡号     校园卡编号             消费时间  消费金额  存储金额     余额  消费次数  \
0  117342773  181316-女  20181316  2019/4/20 20:17   3.0   0.0  186.1   818   
1  117344766  181316-女  20181316   2019/4/20 8:47   0.5   0.0  199.5   814   
2  117346258  181316-女  20181316   2019/4/22 7:27   0.5   0.0  183.1   820   

  消费类型  消费项目编码 消费项目序列号  消费操作编码  操作编码  消费地点 性别  
0   消费      49     NaN     NaN   235  第一食堂  女  
1   消费      63     NaN     NaN    27  第二食堂  女  
2   消费      63     NaN     NaN    27  第二食堂  女  

print(data3.head(3))
 序号      门禁卡号           进出时间       进出地点  是否通过    描述
0  1330906  25558880  2019/4/1 0:00  第六教学楼[进门]     1  允许通过
1  1330907  18413143  2019/4/1 0:02  第六教学楼[出门]     1  允许通过
2  1331384  11642752  2019/4/1 0:00    飞凤轩[进门]     1  允许通过




data2 = data2.merge(data1[['校园卡号','性别']],on='校园卡号')

data2['校园卡号'] = data2['校园卡号'].apply(lambda x: str(x))+'-'+data2['性别']

# 时间格式调整,转换成比较标准的格式，方便后面的处理
import datetime
def st_pt(x):
    #'2019/4/20 20:17'=>'2019-04-20 20:17:00'
     return str(datetime.datetime.strptime(x, "%Y/%m/%d %H:%M"))

# 时间离散化，每个五分钟一个类型
def time_5(s):
    #'2022-02-22 17:46:07'=>'2022-02-22 17_9'
    a = str(round(int(s.split(':')[1])/5))
    return s.split(':')[0]+'_'+a

# 数据处理，处理成标准的格式
df = data2
df = df.sort_values(by='消费时间',ascending=True) 
df['消费时间_F'] = df['消费时间'].apply(st_pt)
df['消费时间_5'] = df['消费时间_F'].apply(time_5)
all_list = []
for v in df['消费时间_5'].unique():
    one = df[df['消费时间_5']==v]['校园卡号'].unique().tolist()
    all_list.append(one)

print(len(all_list))#可以看到，有6176个时间片段，可以类比6176个订单
6176

all_list # 看看list长什么样子    
[['181735-女','180015-女'],['181058-男', '181374-男', '182044-女', '182581-女', '180052-女', '182729-男'],['181405-男','180078-男'],···]

    
#数据保存起来
df.to_csv('df.csv',header=True,index=False)



#加载包，没有的自行安装
#pip install efficient-apriori

from efficient_apriori import apriori

itemsets, rules = apriori(all_list, min_support=0.005,  min_confidence=1)

itemsets[2]
 ('183305-女', '183317-女'): 38,
 ('183308-女', '183317-女'): 42,
 ('183310-女', '183314-女'): 31,
 ('183315-女', '183324-女'): 32,
 ('183338-男', '183345-男'): 40,
 ('183343-男', '183980-女'): 44,
 ('183385-女', '183401-女'): 40,
 ('183386-女', '183409-女'): 34,
 ('183408-女', '183415-女'): 42,
 ('183414-女', '183418-女'): 41,
 ('183419-女', '183420-女'): 56,
 ('183419-女', '183422-女'): 59,
 ···
len(itemsets[2]) # 一共有三百多对，我们下面挑一部分来分析
378